{"version":3,"sources":["./src/app/MyComponents/edit-todo/edit-todo.component.html","./src/app/MyComponents/edit-todo/edit-todo.component.ts","./src/app/MyComponents/todos/todos.component.ts","./src/app/MyComponents/todos/todos.component.html","./src/app/MyComponents/add-todo/add-todo.component.ts","./src/app/MyComponents/add-todo/add-todo.component.html","./src/app/MyComponents/about/about.component.ts","./src/app/MyComponents/about/about.component.html","./src/environments/environment.ts","./src/app/MyComponents/todo-item/todo-item.component.ts","./src/app/MyComponents/todo-item/todo-item.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Todo.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<!-- edit-todo.component.html -->\n<div class=\"container\">\n    <h2>Edit Task</h2>\n    <form (ngSubmit)=\"onSubmit()\" class=\"cform\">\n        <div class=\"my-3\">\n            <label for=\"title\" class=\"form-label\">Task-Name</label>\n            <input type=\"text\" [(ngModel)]=\"todo.title\" class=\"form-control\" name=\"title\" id=\"title\" aria-describedby=\"emailHelp\">\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"desc\" class=\"form-label\">Task Description</label>\n            <input type=\"text\" class=\"form-control\" name=\"desc\" id=\"desc\" [(ngModel)]=\"todo.desc\">\n        </div>\n\n        <!-- New field: Date Selector -->\n        <div class=\"mb-3\">\n            <label for=\"taskDate\" class=\"form-label\">Task Date</label>\n            <input type=\"date\" class=\"form-control\" name=\"taskDate\" id=\"taskDate\" [(ngModel)]=\"todo.taskDate\">\n        </div>\n\n        <!-- New field: Dropdown for Priority -->\n        <div class=\"mb-3\">\n            <label for=\"priority\" class=\"form-label\">Priority</label>\n            <select class=\"form-select\" name=\"priority\" id=\"priority\" [(ngModel)]=\"todo.priority\">\n                <option value=\"high\">High</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"low\">Low</option>\n            </select>\n        </div>\n\n        <!-- New field: Dropdown for Status -->\n        <div class=\"mb-3\">\n            <label for=\"status\" class=\"form-label\">Status</label>\n            <select class=\"form-select\" name=\"status\" id=\"status\" [(ngModel)]=\"todo.status\">\n                <option value=\"to-do\">To-Do</option>\n                <option value=\"in-progress\">In-Progress</option>\n                <option value=\"completed\">Completed</option>\n            </select>\n        </div>\n        <div class=\"mb-3\">\n            <h4>History Log</h4>\n            <ul>\n              <li *ngFor=\"let log of todo.history\">{{ log }}</li>\n            </ul>\n          </div>\n        <button type=\"submit\" class=\"btn btn-sm btn-primary\">Update Task</button>\n    </form>\n</div>\n","  import { Component, OnInit } from '@angular/core';\n  import { ActivatedRoute, Router } from '@angular/router';\n  import { Todo } from '../../Todo';\n\n  @Component({\n    selector: 'app-edit-todo',\n    templateUrl: './edit-todo.component.html',\n    styleUrls: ['./edit-todo.component.css']\n  })\n  export class EditTodoComponent implements OnInit {\n    todo: Todo;\n\n    constructor(\n      private route: ActivatedRoute,\n      private router: Router\n    ) { }\n\n    ngOnInit(): void {\n      const taskId = this.route.snapshot.paramMap.get('id');\n      this.todo = this.getTodoById(taskId);\n    }\n\n    onSubmit() {\n      this.updateTodo();\n      this.router.navigate(['/todos']);\n    }\n\n    private getTodoById(id: string): Todo {\n      const todosString = localStorage.getItem('todos');\n      if (!todosString) {\n        console.error('No todos found in local storage.');\n        return null;\n      }\n    \n      const todos: Todo[] = JSON.parse(todosString);\n      const todo = todos.find(t => t.id === Number(id));\n    \n      if (!todo) {\n        console.error('Todo with ID not found.');\n        return null;\n      }\n    \n      return todo;\n    }\n    private updateTodo(): void {\n      this.todo.history.push(`Task updated on ${new Date().toLocaleString()}`);\n      const todosString = localStorage.getItem('todos');\n      if (!todosString) {\n        console.error('No todos found in local storage.');\n        return;\n      }\n\n      const todos: Todo[] = JSON.parse(todosString);\n      const index = todos.findIndex(t => t.id === this.todo.id);\n\n      if (index === -1) {\n        console.error('Todo with ID not found.');\n        return;\n      }\n\n      todos[index] = this.todo;\n      localStorage.setItem('todos', JSON.stringify(todos));\n      console.log('Updated Todo:', this.todo);\n    }\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { Todo } from '../../Todo';\nimport { Router } from '@angular/router';\nimport * as Papa from 'papaparse';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent implements OnInit {\n  errorMessage: string = '';\n  todos: Todo[];\n  localItem: string;\n  statusFilter: string = '';\n  priorityFilter: string = '';\n  sortType: string = 'asc'; // Default sorting type is ascending\n  nextId: number = 1; // To keep track of the next ID for new todo objects\n\n  constructor(private router: Router) {\n    this.localItem = localStorage.getItem('todos');\n    if (this.localItem == null) {\n      this.todos = [];\n    } else {\n      this.todos = JSON.parse(this.localItem);\n    }\n  }\n\n  ngOnInit(): void {}\n\n  deleteTodo(todo: Todo) {\n    const index = this.todos.indexOf(todo);\n    this.todos.splice(index, 1);\n    localStorage.setItem('todos', JSON.stringify(this.todos));\n  }\n  addTodo(todo: Todo) {\n    // Check if any field is empty\n    if (!todo.title || !todo.desc || !todo.taskDate || !todo.priority || !todo.status) {\n      this.errorMessage = 'All fields are required.';\n      return;\n    }\n\n    // Reset the error message\n    this.errorMessage = '';\n\n    // Rest of the code remains the same\n    const newTodo = new Todo(); // Create a new Todo instance with the history log\n    newTodo.id = this.nextId++; \n    newTodo.title = todo.title;\n    newTodo.desc = todo.desc;\n    newTodo.active = todo.active;\n    newTodo.taskDate = todo.taskDate;\n    newTodo.priority = todo.priority;\n    newTodo.status = todo.status;\n    newTodo.history.push(`Task created on ${new Date().toLocaleString()}`); // Add task creation log\n\n    this.todos.push(newTodo);\n    localStorage.setItem('todos', JSON.stringify(this.todos));\n  }\n\n  \n\n  toggleTodo(todo: Todo) {\n    const index = this.todos.indexOf(todo);\n    this.todos[index].active = !this.todos[index].active;\n    const log = `Status changed to ${this.todos[index].active ? 'active' : 'inactive'} on ${new Date().toLocaleString()}`;\n    this.todos[index].history.push(log);\n    localStorage.setItem('todos', JSON.stringify(this.todos));\n  }\n\n  // Toggle the sorting type between ascending and descending\n  toggleSortType() {\n    this.sortType = this.sortType === 'asc' ? 'desc' : 'asc';\n  }\n\n  // Filter and Sort the todos based on status, priority, and date\n  get filteredTodos(): Todo[] {\n    let filteredTodos = this.todos;\n\n    if (this.statusFilter) {\n      filteredTodos = filteredTodos.filter(todo => todo.status === this.statusFilter);\n    }\n\n    if (this.priorityFilter) {\n      filteredTodos = filteredTodos.filter(todo => todo.priority === this.priorityFilter);\n    }\n\n    // Sort the todos by taskDate based on the sortType\n    filteredTodos.sort((a, b) => {\n      if (this.sortType === 'asc') {\n        return new Date(a.taskDate).getTime() - new Date(b.taskDate).getTime();\n      } else {\n        return new Date(b.taskDate).getTime() - new Date(a.taskDate).getTime();\n      }\n    });\n\n    return filteredTodos;\n  }\n\n  getPriorityClass(priority: string) {\n    if (priority === 'high') {\n      return 'priority-high';\n    } else if (priority === 'medium') {\n      return 'priority-medium';\n    } else if (priority === 'low') {\n      return 'priority-low';\n    } else {\n      return '';\n    }\n  }\n  // getPriorityColor(priority: string): string {\n  //   switch (priority) {\n  //     case 'high':\n  //       return 'red';\n  //     case 'medium':\n  //       return 'yellow';\n  //     case 'low':\n  //       return 'green';\n  //     default:\n  //       return '';\n  //   }\n  // }\n\n  exportToCSV() {\n    const csvData = Papa.unparse(this.filteredTodos, {\n      header: true, // Include header row in the CSV\n    });\n  \n    // Create a Blob object and set the type to 'text/csv'\n    const blob = new Blob([csvData], { type: 'text/csv' });\n  \n    // Create a download link for the Blob\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'todos.csv';\n    document.body.appendChild(a);\n    a.click();\n  \n    // Cleanup: Revoke the URL and remove the link\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  }\n  // Function to navigate to the edit-todo component\n\n  editTask(todo: Todo) {\n    // Check if the todo object is valid and has the 'id' property\n    if (!todo || typeof todo.id === 'undefined') {\n      console.error('Invalid todo object or todo ID is missing.');\n      return;\n    }\n\n    // Navigate to the edit-todo component with the todo ID as a parameter\n    this.router.navigate(['/edit-todo', todo.id]);\n      // Add history entry for edit task\n  todo.history.push(`Task edited on ${new Date().toLocaleString()}`);\n  }\n\n  \n}\n","<div class=\"container\">\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n        {{ errorMessage }}\n      </div>\n    <h1 class=\"text-center mb-3\">Streamline Your Tasks!</h1>\n    <app-add-todo (todoAdd)=\"addTodo($event)\"></app-add-todo>\n   \n    <div class=\"todo\">\n        <h4>Tasks List</h4>\n\n        <!-- Filter Dropdowns -->\n        <div class=\"row mb-3\">\n            <div class=\"col-md-4\">\n                <label for=\"statusFilter\" class=\"form-label\">Filter by Status:</label>\n                <select class=\"form-select\" id=\"statusFilter\" [(ngModel)]=\"statusFilter\">\n                    <option value=\"\">All</option>\n                    <option value=\"to-do\">To-Do</option>\n                    <option value=\"in-progress\">In-Progress</option>\n                    <option value=\"completed\">Completed</option>\n                </select>\n            </div>\n            <div class=\"col-md-4\">\n                <label for=\"priorityFilter\" class=\"form-label\">Filter by Priority:</label>\n                <select class=\"form-select\" id=\"priorityFilter\" [(ngModel)]=\"priorityFilter\">\n                    <option value=\"\">All</option>\n                    <option value=\"high\">High</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"low\">Low</option>\n                </select>\n            </div>\n            <div class=\"col-md-4\">\n                <label for=\"sortType\" class=\"form-label\">Sort by Date:</label>\n                <select class=\"form-select\" id=\"sortType\" [(ngModel)]=\"sortType\" (change)=\"toggleSortType()\">\n                    <option value=\"asc\">Ascending</option>\n                    <option value=\"desc\">Descending</option>\n                </select>\n            </div>\n        </div>\n\n        <table class=\"table\"  style=\"background-color: transparent;\">\n            <!-- Table Headers -->\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Description</th>\n                    <th>Due Date</th>\n                    <th>Priority</th>\n                    <th>Status</th>\n                    \n                </tr>\n            </thead>\n            <!-- Table Body with Filtered and Sorted Todos -->\n            <tbody *ngIf=\"filteredTodos.length > 0; else noTodosBlock\">\n                <tr *ngFor=\"let todo of filteredTodos; index as i\">\n                    <td class=\"wrap-cell\" [ngClass]=\"{'strike': !todo.active}\">{{todo.title}}</td>\n                    <td class=\"wrap-cell\" [ngClass]=\"{'strike': !todo.active}\">{{todo.desc}}</td>\n                    <td [ngClass]=\"{'strike': !todo.active}\">{{todo.taskDate}}</td>\n                    <td [ngClass]=\"{'strike': !todo.active, 'priority-high': todo.priority === 'high', 'priority-medium': todo.priority === 'medium', 'priority-low': todo.priority === 'low'}\">{{todo.priority}}</td>\n\n                    <td [ngClass]=\"{'strike': !todo.active}\">{{todo.status}}</td>\n                    <!-- todos.component.html -->\n                    <!-- Add this button inside the ngFor loop to generate it for each task -->\n                    <td>\n                        <button class=\"btn btn-sm btn-primary\" (click)=\"editTask(todo)\">Edit</button>\n\n\n                    <td>\n                        <div class=\"form-check\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"todo{{i}}\" (click)=\"toggleTodo(todo)\">\n                            <label class=\"form-check-label\" for=\"todo{{i}}\">Done</label>\n                        </div>\n                    </td>\n                    <td>\n                        <button class=\"btn btn-sm btn-danger\" (click)=\"deleteTodo(todo)\">Delete</button>\n                    </td>\n\n                    <td>\n                        <ul>\n                          <li *ngFor=\"let log of todo.history\">{{log}}</li>\n                        </ul>\n                      </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <button class=\"btn btn-primary\" (click)=\"exportToCSV()\">Export Tasks as CSV</button>\n            </div>\n        </div>\n\n        <ng-template #noTodosBlock>\n            <div>Finally, there are no pending tasks!</div>\n\n        </ng-template>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Todo } from 'src/app/Todo';\n\n@Component({\n  selector: 'app-add-todo',\n  templateUrl: './add-todo.component.html',\n  styleUrls: ['./add-todo.component.css']\n})\nexport class AddTodoComponent implements OnInit {\n  id: number;\n  title: string;\n  desc: string;\n  taskDate: string;\n  priority: string; \n  status: string ;\n  history: string[]; // Initialize the status property with 'to-do'\n\n  @Output() todoAdd: EventEmitter<Todo> = new EventEmitter(); \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    const todo = {\n      id: this.id,\n      title: this.title,\n      desc: this.desc,\n      active: true,\n      taskDate: this.taskDate,\n      priority: this.priority,\n      status: this.status ,\n      history:this.history// Ensure the status is passed correctly\n    }\n\n    this.todoAdd.emit(todo);\n  }\n\n}\n","\n\n<form (ngSubmit)=\"onSubmit()\" class=\"cform\">\n    <div class=\"my-3\">\n        <label for=\"title\" class=\"form-label\">Task-Name</label>\n        <input type=\"text\" [(ngModel)]=\"title\" class=\"form-control\" name=\"title\" id=\"title\" aria-describedby=\"emailHelp\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"desc\" class=\"form-label\">Task Description</label>\n        <input type=\"text\" class=\"form-control\" name=\"desc\" id=\"desc\" [(ngModel)]=\"desc\">\n    </div>\n\n    <!-- New field: Date Selector -->\n    <div class=\"mb-3\">\n        <label for=\"taskDate\" class=\"form-label\">Task Date</label>\n        <input type=\"date\" class=\"form-control\" name=\"taskDate\" id=\"taskDate\" [(ngModel)]=\"taskDate\">\n    </div>\n\n    <!-- New field: Dropdown for Priority -->\n    <div class=\"mb-3\">\n        <label for=\"priority\" class=\"form-label\">Priority</label>\n        <select class=\"form-select\" name=\"priority\" id=\"priority\" [(ngModel)]=\"priority\">\n            <option value=\"high\">High</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"low\">Low</option>\n        </select>\n    </div>\n\n    <!-- New field: Dropdown for Status -->\n    <div class=\"mb-3\">\n        <label for=\"status\" class=\"form-label\">Status</label>\n        <select class=\"form-select\" name=\"status\" id=\"status\" [(ngModel)]=\"status\">\n            <option value=\"to-do\">To-Do</option>\n            <option value=\"in-progress\">In-Progress</option>\n            <option value=\"completed\">Completed</option>\n        </select>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-sm btn-primary\">Add Task</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Todo } from '../../Todo';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.css']\n})\nexport class TodoItemComponent implements OnInit {\n\n  @Input() todo: Todo;\n  @Input() i: number;\n  @Output() todoDelete: EventEmitter<Todo> = new EventEmitter();\n  @Output() todoCheckbox: EventEmitter<Todo> = new EventEmitter();\n\n  constructor() { }\n\n  onStatusChange() {\n    this.todoCheckbox.emit(this.todo);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onClick(todo: Todo) {\n    this.todoDelete.emit(todo);\n  }\n\n  onCheckboxClick(todo) {\n    this.todoCheckbox.emit(todo);\n  }\n\n}\n","<div class=\"my-3 custom-table\">\n  <h5 [ngClass]=\"{'strike': todo.active}\">{{todo.title}}</h5>\n  <p [ngClass]=\"{'strike': todo.active}\">{{todo.desc}}</p>\n  <p [ngClass]=\"{'strike': todo.active}\">{{todo.taskDate}}</p>\n  <p [ngClass]=\"{'strike': todo.active}\">{{todo.priority}}</p>\n  <p [ngClass]=\"{'strike': todo.active}\">{{todo.status}}</p>\n\n  <!-- Use the active property for the checkbox -->\n  <div class=\"mb-3 form-check\">\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"todo{{i}}\" (click)=\"onCheckboxClick(todo)\">\n    <label class=\"form-check-label\" for=\"todo{{i}}\">Done</label>\n  </div>\n\n  <button class=\"btn btn-sm btn-danger\" (click)=\"onClick(todo)\">Delete</button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cwh-todo-list';\n}\n","<body>\n  <nav class=\"navbar  navbar-expand-lg bg-body-tertiary\" >\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" routerLink=\"/\">Task Manager</a>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <!-- Navbar links here (if any) -->\n        </ul>\n      </div>\n    </div>\n  </nav>\n\n  <div class=\"content-container\">\n    <router-outlet></router-outlet>\n  </div>\n</body>\n","export class Todo {\r\n    id: number;\r\n    title: string\r\n    desc: string\r\n    active: boolean\r\n    taskDate: string;\r\n    priority: string;\r\n    status: string;\r\n    history: string[];\r\n\r\n    constructor() {\r\n        this.history = []; // Initialize the history log as an empty array\r\n      }\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodosComponent } from './MyComponents/todos/todos.component';\nimport { TodoItemComponent } from './MyComponents/todo-item/todo-item.component';\nimport { AddTodoComponent } from './MyComponents/add-todo/add-todo.component';\nimport { FormsModule } from '@angular/forms';\nimport { AboutComponent } from './MyComponents/about/about.component';\nimport { EditTodoComponent } from './MyComponents/edit-todo/edit-todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodosComponent,\n    TodoItemComponent,\n    AddTodoComponent,\n    AboutComponent,\n    EditTodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [{provide:LocationStrategy, useClass:HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TodosComponent } from './MyComponents/todos/todos.component';\nimport { EditTodoComponent } from './MyComponents/edit-todo/edit-todo.component';\n\nconst routes: Routes = [\n  { path: 'todos', component: TodosComponent },\n  { path: 'edit-todo/:id', component: EditTodoComponent }, // Add this route for edit-todo component\n  { path: '', redirectTo: '/todos', pathMatch: 'full' },\n  // Add other routes as needed\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}